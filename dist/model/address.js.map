{"version":3,"sources":["../../src/model/address.js"],"names":["mongoose","require","addressSchema","Schema","name","type","String","required","trim","min","max","mobileNumber","pinCode","locality","address","cityDistrictTown","state","landmark","alternatePhone","addressType","enum","userAddressSchema","user","Types","ObjectId","ref","timestamps","model","module","exports"],"mappings":";;;;AAAA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;;AAEA;AACA,IAAMC,gBAAgB,IAAIF,SAASG,MAAb,CAAoB;AACxCC,QAAM;AACJC,UAAMC,MADF;AAEJC,cAAU,IAFN;AAGJC,UAAM,IAHF;AAIJC,SAAK,CAJD;AAKJC,SAAK;AALD,GADkC;AAQxCC,gBAAc;AACZN,UAAMC,MADM;AAEZC,cAAU,IAFE;AAGZC,UAAM;AAHM,GAR0B;AAaxCI,WAAS;AACPP,UAAMC,MADC;AAEPC,cAAU,IAFH;AAGPC,UAAM;AAHC,GAb+B;AAkBxCK,YAAU;AACRR,UAAMC,MADE;AAERC,cAAU,IAFF;AAGRC,UAAM,IAHE;AAIRC,SAAK,EAJG;AAKRC,SAAK;AALG,GAlB8B;AAyBxCI,WAAS;AACPT,UAAMC,MADC;AAEPC,cAAU,IAFH;AAGPC,UAAM,IAHC;AAIPC,SAAK,EAJE;AAKPC,SAAK;AALE,GAzB+B;AAgCxCK,oBAAkB;AAChBV,UAAMC,MADU;AAEhBC,cAAU,IAFM;AAGhBC,UAAM;AAHU,GAhCsB;AAqCxCQ;AACEX,UAAMC,MADR;AAEEC,cAAU;AAFZ,iBAGY,IAHZ,CArCwC;AA0CxCU,YAAU;AACRZ,UAAMC,MADE;AAERG,SAAK,EAFG;AAGRC,SAAK;AAHG,GA1C8B;AA+CxCQ,kBAAgB;AACdb,UAAMC;AADQ,GA/CwB;AAkDxCa;AACEd,UAAMC,MADR;AAEEC,cAAU,IAFZ;AAGEa,UAAM,CAAC,MAAD,EAAS,MAAT;AAHR,iBAIY,IAJZ;AAlDwC,CAApB,CAAtB;;AA0DA;AACA,IAAMC,oBAAoB,IAAIrB,SAASG,MAAb,CACxB;AACEmB,QAAM;AACJjB,UAAML,SAASG,MAAT,CAAgBoB,KAAhB,CAAsBC,QADxB;AAEJjB,cAAU,IAFN;AAGJkB,SAAK;AAHD,GADR;AAMEX,WAAS,CAACZ,aAAD;AANX,CADwB,EASxB,EAAEwB,YAAY,IAAd,EATwB,CAA1B;;AAYA1B,SAAS2B,KAAT,CAAe,SAAf,EAA0BzB,aAA1B;AACA0B,OAAOC,OAAP,GAAiB7B,SAAS2B,KAAT,CAAe,aAAf,EAA8BN,iBAA9B,CAAjB","file":"address.js","sourcesContent":["const mongoose = require(\"mongoose\");\r\n\r\n// C\r\nconst addressSchema = new mongoose.Schema({\r\n  name: {\r\n    type: String,\r\n    required: true,\r\n    trim: true,\r\n    min: 3,\r\n    max: 50,\r\n  },\r\n  mobileNumber: {\r\n    type: String,\r\n    required: true,\r\n    trim: true,\r\n  },\r\n  pinCode: {\r\n    type: String,\r\n    required: true,\r\n    trim: true,\r\n  },\r\n  locality: {\r\n    type: String,\r\n    required: true,\r\n    trim: true,\r\n    min: 10,\r\n    max: 100,\r\n  },\r\n  address: {\r\n    type: String,\r\n    required: true,\r\n    trim: true,\r\n    min: 10,\r\n    max: 100,\r\n  },\r\n  cityDistrictTown: {\r\n    type: String,\r\n    required: true,\r\n    trim: true,\r\n  },\r\n  state: {\r\n    type: String,\r\n    required: true,\r\n    required: true,\r\n  },\r\n  landmark: {\r\n    type: String,\r\n    min: 10,\r\n    max: 100,\r\n  },\r\n  alternatePhone: {\r\n    type: String,\r\n  },\r\n  addressType: {\r\n    type: String,\r\n    required: true,\r\n    enum: [\"home\", \"work\"],\r\n    required: true,\r\n  },\r\n});\r\n\r\n// B\r\nconst userAddressSchema = new mongoose.Schema(\r\n  {\r\n    user: {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      required: true,\r\n      ref: \"User\",\r\n    },\r\n    address: [addressSchema],\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nmongoose.model(\"Address\", addressSchema);\r\nmodule.exports = mongoose.model(\"UserAddress\", userAddressSchema);\r\n"]}