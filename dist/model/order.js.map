{"version":3,"sources":["../../src/model/order.js"],"names":["mongoose","require","orderSchema","Schema","user","type","Types","ObjectId","ref","required","addressId","totalAmount","Number","items","productId","payablePrice","purchasedQty","paymentStatus","String","enum","paymentType","orderStatus","default","date","Date","isCompleted","Boolean","timestamps","module","exports","model"],"mappings":";;AAAA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA;AACA,IAAMC,cAAc,IAAIF,SAASG,MAAb,CAClB;AACEC,QAAM;AACJC,UAAML,SAASG,MAAT,CAAgBG,KAAhB,CAAsBC,QADxB;AAEJC,SAAK,MAFD;AAGJC,cAAU;AAHN,GADR;AAMEC,aAAW;AACTL,UAAML,SAASG,MAAT,CAAgBG,KAAhB,CAAsBC,QADnB;AAETC,SAAK,qBAFI;AAGTC,cAAU;AAHD,GANb;AAWEE,eAAa;AACXN,UAAMO,MADK;AAEXH,cAAU;AAFC,GAXf;AAeEI,SAAO,CACL;AACEC,eAAW;AACTT,YAAML,SAASG,MAAT,CAAgBG,KAAhB,CAAsBC,QADnB;AAETC,WAAK;AAFI,KADb;AAKEO,kBAAc;AACZV,YAAMO,MADM;AAEZH,gBAAU;AAFE,KALhB;AASEO,kBAAc;AACZX,YAAMO,MADM;AAEZH,gBAAU;AAFE;AAThB,GADK,CAfT;AA+BEQ,iBAAe;AACbZ,UAAMa,MADO;AAEbC,UAAM,CAAC,SAAD,EAAY,WAAZ,EAAyB,WAAzB,EAAsC,QAAtC,CAFO;AAGbV,cAAU;AAHG,GA/BjB;AAoCEW,eAAa;AACXf,UAAMa,MADK;AAEXC,UAAM,CAAC,KAAD,EAAQ,MAAR,CAFK;AAGXV,cAAU;AAHC,GApCf;AAyCEY,eAAa,CACX;AACEhB,UAAM;AACJA,YAAMa,MADF;AAEJC,YAAM,CAAC,SAAD,EAAY,QAAZ,EAAsB,SAAtB,EAAiC,WAAjC,CAFF;AAGJG,eAAS;AAHL,KADR;AAMEC,UAAM;AACJlB,YAAMmB;AADF,KANR;AASEC,iBAAa;AACXpB,YAAMqB,OADK;AAEXJ,eAAS;AAFE;AATf,GADW;AAzCf,CADkB,EA2DlB,EAAEK,YAAY,IAAd,EA3DkB,CAApB;;AA8DAC,OAAOC,OAAP,GAAiB7B,SAAS8B,KAAT,CAAe,OAAf,EAAwB5B,WAAxB,CAAjB","file":"order.js","sourcesContent":["const mongoose = require(\"mongoose\");\r\n// A\r\nconst orderSchema = new mongoose.Schema(\r\n  {\r\n    user: {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n      required: true,\r\n    },\r\n    addressId: {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: \"UserAddress.address\",\r\n      required: true,\r\n    },\r\n    totalAmount: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n    items: [\r\n      {\r\n        productId: {\r\n          type: mongoose.Schema.Types.ObjectId,\r\n          ref: \"Product\",\r\n        },\r\n        payablePrice: {\r\n          type: Number,\r\n          required: true,\r\n        },\r\n        purchasedQty: {\r\n          type: Number,\r\n          required: true,\r\n        },\r\n      },\r\n    ],\r\n    paymentStatus: {\r\n      type: String,\r\n      enum: [\"pending\", \"completed\", \"cancelled\", \"refund\"],\r\n      required: true,\r\n    },\r\n    paymentType: {\r\n      type: String,\r\n      enum: [\"cod\", \"card\"],\r\n      required: true,\r\n    },\r\n    orderStatus: [\r\n      {\r\n        type: {\r\n          type: String,\r\n          enum: [\"ordered\", \"packed\", \"shipped\", \"delivered\"],\r\n          default: \"ordered\",\r\n        },\r\n        date: {\r\n          type: Date,\r\n        },\r\n        isCompleted: {\r\n          type: Boolean,\r\n          default: false,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nmodule.exports = mongoose.model(\"Order\", orderSchema);\r\n"]}