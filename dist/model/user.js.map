{"version":3,"sources":["../../src/model/user.js"],"names":["mongoose","require","bcrypt","userSchema","Schema","firstName","type","String","required","trim","min","max","lastName","username","unique","index","lowercase","email","hash_password","role","enum","default","contactNumber","pofilePicture","timestamps","virtual","get","methods","authenticate","password","compare","module","exports","model"],"mappings":";;;;AAAA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA,IAAMC,SAASD,QAAQ,QAAR,CAAf;;AAEA,IAAME,aAAa,IAAIH,SAASI,MAAb,CAAoB;AACnCC,eAAW;AACPC,cAAMC,MADC;AAEPC,kBAAU,IAFH;AAGPC,cAAM,IAHC;AAIPC,aAAK,CAJE;AAKPC,aAAK;AALE,KADwB;AAQnCC,cAAU;AACNN,cAAMC,MADA;AAENC,kBAAU,IAFJ;AAGNC,cAAM,IAHA;AAINC,aAAK,CAJC;AAKNC,aAAK;AALC,KARyB;AAenCE,cAAU;AACNP,cAAMC,MADA;AAENC,kBAAU,IAFJ;AAGNC,cAAM,IAHA;AAINK,gBAAQ,IAJF;AAKNC,eAAO,IALD;AAMNC,mBAAW;AANL,KAfyB;AAuBnCC,WAAO;AACHX,cAAMC,MADH;AAEHC,kBAAU,IAFP;AAGHC,cAAM,IAHH;AAIHK,gBAAQ,IAJL;AAKHE,mBAAW;AALR,KAvB4B;AA8BnCE,mBAAe;AACXZ,cAAMC,MADK;AAEXC,kBAAU;AAFC,KA9BoB;AAkCnCW,UAAM;AACFb,cAAMC,MADJ;AAEFa,cAAM,CAAC,MAAD,EAAS,OAAT,CAFJ;AAGFC,iBAAQ;AAHN,KAlC6B;AAuCnCC,mBAAe,EAAEhB,MAAMC,MAAR,EAvCoB;AAwCnCgB,mBAAe,EAAEjB,MAAMC,MAAR;AAxCoB,CAApB,EAyChB,EAAEiB,YAAY,IAAd,EAzCgB,CAAnB;;AA4CA;AACA;AACA;AACA;;AAEArB,WAAWsB,OAAX,CAAmB,UAAnB,EACCC,GADD,CACK,YAAU;AACX,WAAU,KAAKrB,SAAf,SAA4B,KAAKO,QAAjC;AACH,CAHD;;AAKAT,WAAWwB,OAAX,GAAqB;AACjBC;AAAA,2EAAc,iBAAeC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACG3B,OAAO4B,OAAP,CAAeD,QAAf,EAAyB,KAAKX,aAA9B,CADH;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADiB,CAArB;;AAOAa,OAAOC,OAAP,GAAiBhC,SAASiC,KAAT,CAAe,MAAf,EAAuB9B,UAAvB,CAAjB","file":"user.js","sourcesContent":["const mongoose = require('mongoose');\r\nconst bcrypt = require('bcrypt');\r\n\r\nconst userSchema = new mongoose.Schema({\r\n    firstName: {\r\n        type: String,\r\n        required: true,\r\n        trim: true,\r\n        min: 3,\r\n        max: 20\r\n    },\r\n    lastName: {\r\n        type: String,\r\n        required: true,\r\n        trim: true,\r\n        min: 3,\r\n        max: 20\r\n    },\r\n    username: {\r\n        type: String,\r\n        required: true,\r\n        trim: true,\r\n        unique: true,\r\n        index: true,\r\n        lowercase: true\r\n    },\r\n    email: {\r\n        type: String,\r\n        required: true,\r\n        trim: true,\r\n        unique: true,\r\n        lowercase: true\r\n    },\r\n    hash_password: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    role: {\r\n        type: String,\r\n        enum: ['user', 'admin'],\r\n        default:'user'\r\n    },\r\n    contactNumber: { type: String },\r\n    pofilePicture: { type: String }\r\n}, { timestamps: true });\r\n\r\n\r\n// userSchema.virtual('password')\r\n// .set(function(password){\r\n//     this.hash_password = bcrypt.hashSync(password, 10);\r\n// });\r\n\r\nuserSchema.virtual('fullName')\r\n.get(function(){\r\n    return `${this.firstName} ${this.lastName}`;\r\n});\r\n\r\nuserSchema.methods = {\r\n    authenticate: async function(password){\r\n        return await bcrypt.compare(password, this.hash_password) ;\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = mongoose.model('User', userSchema);"]}