{"version":3,"sources":["../src/app.js"],"names":["express","require","env","app","mongoose","cors","path","authRoutes","adminRoutes","categoryRoutes","productRoutes","cartRoutes","initialDataRoutes","addressRoutes","orderRoutes","adminOrderRoutes","config","connect","process","MONGO_DB_USER","MONGO_DB_PASSWORD","MONGO_DB_DATABASE","useNewUrlParser","useUnifiedTopology","useCreateIndex","then","console","log","use","json","static","join","__dirname","listen","PORT"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,MAAMD,QAAQ,QAAR,CAAZ;AACA,IAAME,MAAMH,SAAZ;AACA,IAAMI,WAAWH,QAAQ,UAAR,CAAjB;AACA,IAAMI,OAAOJ,QAAQ,MAAR,CAAb;AACA,IAAMK,OAAOL,QAAQ,MAAR,CAAb;;AAEA;AACA,IAAMM,aAAaN,QAAQ,eAAR,CAAnB;AACA,IAAMO,cAAcP,QAAQ,qBAAR,CAApB;AACA,IAAMQ,iBAAiBR,QAAQ,mBAAR,CAAvB;AACA,IAAMS,gBAAgBT,QAAQ,kBAAR,CAAtB;AACA,IAAMU,aAAaV,QAAQ,eAAR,CAAnB;AACA,IAAMW,oBAAoBX,QAAQ,4BAAR,CAA1B;AACA,IAAMY,gBAAgBZ,QAAQ,kBAAR,CAAtB;AACA,IAAMa,cAAcb,QAAQ,gBAAR,CAApB;AACA,IAAMc,mBAAmBd,QAAQ,6BAAR,CAAzB;;AAEA;AACAC,IAAIc,MAAJ;;AAEA;AACA;AACAZ,SAASa,OAAT,oBACqBC,QAAQhB,GAAR,CAAYiB,aADjC,SACkDD,QAAQhB,GAAR,CAAYkB,iBAD9D,oCAC8GF,QAAQhB,GAAR,CAAYmB,iBAD1H,mCAEI;AACIC,qBAAiB,IADrB;AAEIC,wBAAoB,IAFxB;AAGIC,oBAAgB;AAHpB,CAFJ,EAOEC,IAPF,CAOO,YAAM;AACTC,YAAQC,GAAR,CAAY,oBAAZ;AACH,CATD;;AAWAxB,IAAIyB,GAAJ,CAAQvB,MAAR;AACAF,IAAIyB,GAAJ,CAAQ5B,QAAQ6B,IAAR,EAAR;AACA1B,IAAIyB,GAAJ,CAAQ,GAAR,EAAa5B,QAAQ8B,MAAR,CAAexB,KAAKyB,IAAL,CAAUC,SAAV,EAAqB,KAArB,CAAf,CAAb;AACA7B,IAAIyB,GAAJ,CAAQ,SAAR,EAAmB5B,QAAQ8B,MAAR,CAAexB,KAAKyB,IAAL,CAAUC,SAAV,EAAqB,SAArB,CAAf,CAAnB;AACA;AACA;AACA7B,IAAIyB,GAAJ,CAAQ,MAAR,EAAgBrB,UAAhB;AACAJ,IAAIyB,GAAJ,CAAQ,MAAR,EAAgBpB,WAAhB;AACAL,IAAIyB,GAAJ,CAAQ,MAAR,EAAgBnB,cAAhB;AACAN,IAAIyB,GAAJ,CAAQ,MAAR,EAAgBlB,aAAhB;AACAP,IAAIyB,GAAJ,CAAQ,MAAR,EAAgBjB,UAAhB;AACAR,IAAIyB,GAAJ,CAAQ,MAAR,EAAgBhB,iBAAhB;AACAT,IAAIyB,GAAJ,CAAQ,MAAR,EAAgBf,aAAhB;AACAV,IAAIyB,GAAJ,CAAQ,MAAR,EAAgBd,WAAhB;AACAX,IAAIyB,GAAJ,CAAQ,MAAR,EAAgBb,gBAAhB;;AAIAZ,IAAI8B,MAAJ,CAAWf,QAAQhB,GAAR,CAAYgC,IAAvB,EAA6B,YAAM;AAC/BR,YAAQC,GAAR,gCAAyCT,QAAQhB,GAAR,CAAYgC,IAArD;AACH,CAFD","file":"app.js","sourcesContent":["const express = require('express');\r\nconst env = require('dotenv');\r\nconst app = express();\r\nconst mongoose = require('mongoose');\r\nconst cors = require('cors');\r\nconst path = require('path');\r\n\r\n//routes\r\nconst authRoutes = require('./routes/auth');\r\nconst adminRoutes = require('./routes/admin/auth');\r\nconst categoryRoutes = require('./routes/category');\r\nconst productRoutes = require('./routes/product');\r\nconst cartRoutes = require('./routes/cart');\r\nconst initialDataRoutes = require('./routes/admin/initialData');\r\nconst addressRoutes = require('./routes/address');\r\nconst orderRoutes = require('./routes/order');\r\nconst adminOrderRoutes = require('./routes/admin/order.routes')\r\n\r\n//environment variable or you can say constants\r\nenv.config();\r\n\r\n// mongodb connection\r\n//mongodb+srv://anshul:<password>@cluster0.qysex.mongodb.net/<dbname>?retryWrites=true&w=majority\r\nmongoose.connect(\r\n    `mongodb+srv://${process.env.MONGO_DB_USER}:${process.env.MONGO_DB_PASSWORD}@cluster0.qysex.mongodb.net/${process.env.MONGO_DB_DATABASE}?retryWrites=true&w=majority`, \r\n    {\r\n        useNewUrlParser: true, \r\n        useUnifiedTopology: true,\r\n        useCreateIndex: true\r\n    }\r\n).then(() => {\r\n    console.log('Database connected');\r\n});\r\n\r\napp.use(cors())\r\napp.use(express.json());\r\napp.use('/', express.static(path.join(__dirname, 'www')));\r\napp.use('/public', express.static(path.join(__dirname, 'uploads')));\r\n// app.use(\"/public\", express.static(path.join(__dirname + '/public', \"uploads\")));\r\n// app.use('/public', express.static(process.cwd() + '/public', 'uploads'));\r\napp.use('/api', authRoutes);\r\napp.use('/api', adminRoutes);\r\napp.use('/api', categoryRoutes);\r\napp.use('/api', productRoutes);\r\napp.use('/api', cartRoutes);\r\napp.use('/api', initialDataRoutes);\r\napp.use('/api', addressRoutes);\r\napp.use('/api', orderRoutes);\r\napp.use('/api', adminOrderRoutes);\r\n\r\n\r\n\r\napp.listen(process.env.PORT, () => {\r\n    console.log(`Server is running on port ${process.env.PORT}`);\r\n});"]}