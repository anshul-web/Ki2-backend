{"version":3,"sources":["../../../src/controller/admin/order.js"],"names":["Address","require","Order","exports","updateOrder","req","res","updateOne","_id","body","orderId","type","$set","date","Date","isCompleted","exec","error","order","status","json","getCustomerOrders","find","populate","orders","getOrder","findOne","lean","user","address","adr","toString","addressId"],"mappings":";;;;AAAA,IAAMA,UAAUC,QAAQ,qBAAR,CAAhB;AACA,IAAMC,QAAQD,QAAQ,mBAAR,CAAd;;AAEAE,QAAQC,WAAR,GAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClCJ,QAAMK,SAAN,CACE,EAAEC,KAAKH,IAAII,IAAJ,CAASC,OAAhB,EAAyB,oBAAoBL,IAAII,IAAJ,CAASE,IAAtD,EADF,EAEE;AACEC,UAAM;AACJ,uBAAiB,CACf,EAAED,MAAMN,IAAII,IAAJ,CAASE,IAAjB,EAAuBE,MAAM,IAAIC,IAAJ,EAA7B,EAAyCC,aAAa,IAAtD,EADe;AADb;AADR,GAFF,EASEC,IATF,CASO,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACvB,QAAID,KAAJ,EAAW,OAAOX,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEH,YAAF,EAArB,CAAP;AACX,QAAIC,KAAJ,EAAW;AACTZ,UAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEF,YAAF,EAArB;AACD;AACF,GAdD;AAeD,CAhBD;;AAkBAf,QAAQkB,iBAAR;AAAA,qEAA4B,iBAAOhB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLJ,MAAMoB,IAAN,CAAW,EAAX,EAClBC,QADkB,CACT,iBADS,EACU,MADV,EAElBP,IAFkB,EADK;;AAAA;AACpBQ,kBADoB;;AAI1BlB,gBAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEI,cAAF,EAArB;;AAJ0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AAOArB,QAAQsB,QAAR,GAAmB,UAACpB,GAAD,EAAMC,GAAN,EAAc;AAC/BJ,QAAMwB,OAAN,CAAc,EAAElB,KAAKH,IAAII,IAAJ,CAASC,OAAhB,EAAd,EACGa,QADH,CACY,iBADZ,EAC+B,0BAD/B,EAEGI,IAFH,GAGGX,IAHH,CAGQ,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACtB;AACA,QAAID,KAAJ,EAAW,OAAOX,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEH,YAAF,EAArB,CAAP;AACX,QAAIC,KAAJ,EAAW;AACTlB,cAAQ0B,OAAR,CAAgB;AACdE,cAAMV,MAAMU;AADE,OAAhB,EAEGZ,IAFH,CAEQ,UAACC,KAAD,EAAQY,OAAR,EAAoB;AAC1B;AACE,YAAIZ,KAAJ,EAAW,OAAOX,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEH,YAAF,EAArB,CAAP;AACbC,cAAMW,OAAN,GAAgBA,QAAQA,OAAR,CAAgBP,IAAhB,CACb,UAACQ,GAAD;AAAA,iBAASA,IAAItB,GAAJ,CAAQuB,QAAR,MAAsBb,MAAMc,SAAN,CAAgBD,QAAhB,EAA/B;AAAA,SADa,CAAhB;AAGGzB,YAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACtBF;AADsB,SAArB;AAGJ,OAXD;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF,GA9BH;AA+BD,CAhCD","file":"order.js","sourcesContent":["const Address = require(\"../../model/address\");\r\nconst Order = require(\"../../model/order\");\r\n\r\nexports.updateOrder = (req, res) => {\r\n  Order.updateOne(\r\n    { _id: req.body.orderId, \"orderStatus.type\": req.body.type },\r\n    {\r\n      $set: {\r\n        \"orderStatus.$\": [\r\n          { type: req.body.type, date: new Date(), isCompleted: true },\r\n        ],\r\n      },\r\n    }\r\n  ).exec((error, order) => {\r\n    if (error) return res.status(400).json({ error });\r\n    if (order) {\r\n      res.status(201).json({ order });\r\n    }\r\n  });\r\n};\r\n\r\nexports.getCustomerOrders = async (req, res) => {\r\n  const orders = await Order.find({})\r\n    .populate(\"items.productId\", \"name\")\r\n    .exec();\r\n  res.status(200).json({ orders });\r\n};\r\n\r\nexports.getOrder = (req, res) => {\r\n  Order.findOne({ _id: req.body.orderId })\r\n    .populate(\"items.productId\", \"_id name productPictures\")\r\n    .lean()\r\n    .exec((error, order) => {\r\n      // console.log(order.user);\r\n      if (error) return res.status(400).json({ error });\r\n      if (order) {\r\n        Address.findOne({\r\n          user: order.user,\r\n        }).exec((error, address) => {\r\n          // console.log(address);\r\n            if (error) return res.status(400).json({ error });\r\n          order.address = address.address.find(\r\n             (adr) => adr._id.toString() == order.addressId.toString()\r\n           );\r\n             res.status(200).json({\r\n            order,\r\n          });\r\n        })\r\n        \r\n        // .exec((error, address) => {\r\n        //   if (error) return res.status(400).json({ error });\r\n        //   order.address = address.address.find(\r\n        //     (adr) => adr._id.toString() == order.addressId.toString()\r\n        //   );\r\n        //   res.status(200).json({\r\n        //     order,\r\n        //   });\r\n        // });\r\n      }\r\n    });\r\n};"]}